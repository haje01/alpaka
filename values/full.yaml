
# kafka + dashboard + client + jdbc 커넥터
kafka:
  replicaCount: 3
  defaultReplicationFactor: 2
  numPartitions: 8
  metrics:
    kafka:
      enabled: true
    jmx:
      enabled: true
    serviceMonitor:
      enabled: true
      relabelings:
        - sourceLabels: ["container", "pod"]
          regex: "jmx-exporter;"
          replacement: jmx
          targetLabel: job
        # 인스턴스 값을 IP 가 아닌 Pod 명으로 
        - regex: "instance"
          action: labeldrop
        - sourceLabels: ["pod"]
          targetLabel: instance
      metricRelabelings:
        # 인스턴스 값을 IP 가 아닌 Pod 명으로 
        - regex: "instance"
          action: labeldrop
        - sourceLabels: ["pod"]
          targetLabel: instance

  zookeeper:
    enabled: false
    # replicaCount: 3
  externalZookeeper:
    servers: ['full-zookeeper:2181']
  deleteTopicEnable: true
  podLabels:
    job: kafka


zookeeper:
  enabled: true
  replicaCount: 3
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: 10s
      scrapeTimeout:  5s
      relabelings: 
        - replacement: zookeeper
          targetLabel: job
        # 인스턴스 값을 IP 가 아닌 Pod 명으로 
        - regex: "instance"
          action: labeldrop
        - sourceLabels: ["pod"]
          targetLabel: instance
      metricRelabelings:
        # 인스턴스 값을 IP 가 아닌 Pod 명으로 
        - regex: "instance"
          action: labeldrop
        - sourceLabels: ["pod"]
          targetLabel: instance



prometheus:
  enabled: true
  prometheus:
    enabled: true
    additionalScrapeConfigs:
      enabled: true
      type: internal
      internal:
        jobList:
        - job_name: kminion-metrics
          scrape_interval: 10s
          scrape_timeout:  5s
          metrics_path: "/metrics"
          static_configs:
          - targets:
            - full-kminion:8080
        # - job_name: jmx
        #   scrape_interval: 10s
        #   scrape_timeout:  5s
        #   metrics_path: "/metrics"
        #   static_configs:
        #   - targets:
        #     - full-kafka-headless:5556
        - job_name: zookeeper
          scrape_interval: 10s
          scrape_timeout:  5s
          metrics_path: "/metrics"
          static_configs:
          - targets:
            - full-zookeeper-metrics:9141

# prometheus:
#   enabled: true
#   prometheus:
#     enabled: true
#   rbac:
#     create: false 
#     pspEnabled: false


k8dashboard:
  enabled: true
  service:
    externalPort: 8443
  serviceAccount:
    name: k8dash-admin
  extraArgs:
    - --token-ttl=86400
    - --enable-skip-login 

cli:
  enabled: true
  name: kafka-cli
  podLabels: {}
  podAnnotations: {}
  image:
    repository: "haje01/kafka-cli"
    tag: latest
    pullPolicy: Always
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  dnsConfig:
    # 필요시 외부 DNS 등록 
    # nameservers:
    #   - 213.234.76.4
    options:
      - name: ndots
        value: "2"

dbcon:
  enabled: true
  replicaCount: 3
  kafkaClientPort: 9092
  image:
    repository: "haje01/kafka-dbcon"
    tag: latest
    pullPolicy: IfNotPresent
  timezone: Asia/Seoul


kafka-ui:
  enabled: true
  yamlApplicationConfig:
    kafka:
      clusters:
        - name: full-kafka
          bootstrapServers: full-kafka-headless:9092
          zookeeper: full-zookeeper-headless:2181
          kafkaConnect:
            - name: dbcon
              address: http://full-alpaka-dbcon:8083
          metrics:
            port: 5556
            type: JMX
    auth:
      type: disabled
    management:
      health:
        ldap:
          enabled: false


## prometheus-coummity 
#
# prometheus:
#   enabled: true
#   extraScrapeConfigs: |
#     - job_name: kminion-metrics
#       scrape_interval: 10s
#       scrape_timeout:  5s
#       metrics_path: "/metrics"
#       static_configs:
#       - targets:
#         - full-kminion:8080
    # - job_name: jmx
    #   scrape_interval: 10s
    #   scrape_timeout:  5s
    #   metrics_path: "/metrics"
    #   static_configs:
    #   - targets:
    #     - full-kafka-headless:5556
    # - job_name: zookeeper
    #   scrape_interval: 10s
    #   scrape_timeout:  5s
    #   metrics_path: "/metrics"
    #   static_configs:
    #   - targets:
    #     - full-zookeeper-metrics:9141


grafana:
  enabled: true
  adminSecretName: full-grafana-admin
  admin:
    user: admin
    password: admindjemals
  datasources:
    secretDefinition:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          access: proxy
          url: http://full-prometheus-prometheus:9090
          isDefault: true
  dashboardsProvider:
    enabled: true
  dashboardsConfigMaps:
    - configMapName: full-alpaka-grafana-cluster
      fileName: kminion-cluster_rev1.json
    - configMapName: full-alpaka-grafana-topic
      fileName: kminion-topic_rev1.json
    - configMapName: full-alpaka-grafana-groups
      fileName: kminion-groups_rev1.json
    - configMapName: full-alpaka-grafana-zookeeper
      fileName: zookeeper-by-prometheus_rev4.json
    - configMapName: full-alpaka-grafana-jvm
      fileName: altassian-overview_rev1.json


kminion:
  enabled: true
  kminion:
    config:
      kafka:
        brokers: ["full-kafka-headless:9092"]

    exporter:
      host: "full-kminion"
      port: 8080

  service:
    annotations:
      prometheus.io/probe: kminion
  
