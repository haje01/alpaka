#
#  k3d 사용시
#
k8s_dist: k3d

ui4kafka:
  yamlApplicationConfig:
    kafka:
      clusters:
        - name: k3d-kafka
          bootstrapServers: k3d-kafka-headless:9092
          zookeeper: k3d-zookeeper-headless:2181
          kafkaConnect:
            - name: srccon
              address: http://k3d-alpaka-srccon:8083
          metrics:
            port: 5556
            type: JMX

prometheus:
  prometheus:
    additionalScrapeConfigs:
      internal:
        jobList:
        - job_name: kminion-metrics
          static_configs:
          - targets:
            - k3d-kminion:8080
        - job_name: zookeeper
          static_configs:
          - targets:
            - k3d-zookeeper-metrics:9141

grafana:
  datasources:
    secretDefinition:
      apiVersion: 1
      datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://k3d-prometheus-prometheus:9090
        isDefault: true
  dashboardsConfigMaps:
    - configMapName: k3d-alpaka-grafana-cluster
      fileName: kminion-cluster_rev1.json
    - configMapName: k3d-alpaka-grafana-topic
      fileName: kminion-topic_rev1.json
    - configMapName: k3d-alpaka-grafana-groups
      fileName: kminion-groups_rev1.json
    - configMapName: k3d-alpaka-grafana-zookeeper
      fileName: zookeeper-by-prometheus_rev4.json
    - configMapName: k3d-alpaka-grafana-jvm
      fileName: altassian-overview_rev1.json


kminion:
  kminion:
    config:
      kafka:
        brokers: ["k3d-kafka-headless:9092"]
    exporter:
      host: "k3d-kminion"


ingress:
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"